<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/DepthwiseConvolutionLayer.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('validation_2_c_l_2_depthwise_convolution_layer_8cpp.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">DepthwiseConvolutionLayer.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_depthwise_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLDepthwiseConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/DepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/DilatedDepthwiseConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/DepthwiseConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="validation_2_c_l_2_depthwise_convolution_layer_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2018 ARM Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ae133c0063d4112703d30b7f7ae485fce"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae133c0063d4112703d30b7f7ae485fce"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae133c0063d4112703d30b7f7ae485fce">CLDepthwiseConvolutionLayerFixture</a> = DepthwiseConvolutionLayerValidationFixture&lt; CLTensor, CLAccessor, CLDepthwiseConvolutionLayer, T &gt;</td></tr>
<tr class="separator:ae133c0063d4112703d30b7f7ae485fce"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aed5f7a9b1bde3cc3a789cd674974e254"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aed5f7a9b1bde3cc3a789cd674974e254">DATA_TEST_CASE</a> (Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 8U), 1, DataType::F32), TensorInfo(TensorShape(50U, 32U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(48U, 30U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 2, 2, 3, })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LINEAR), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(20U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, act_info, dilation, expected)</td></tr>
<tr class="separator:aed5f7a9b1bde3cc3a789cd674974e254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1746a40504c1600cad5df8b24c2c928e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1746a40504c1600cad5df8b24c2c928e">DATA_TEST_CASE</a> (ValidateGeneric, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 11U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 2, 2, 3, })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(20U, 1U), Size2D(0U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, dilation, expected)</td></tr>
<tr class="separator:a1746a40504c1600cad5df8b24c2c928e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac862dd7e549bd566454cc7cfb3579dae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac862dd7e549bd566454cc7cfb3579dae">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(framework::dataset::concat(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), datasets::SmallDepthwiseConvolutionLayerDataset3x3NCHW()), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac862dd7e549bd566454cc7cfb3579dae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a360946fa73ea2d50a213993a22710fb1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a360946fa73ea2d50a213993a22710fb1">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a360946fa73ea2d50a213993a22710fb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0ea53cacfdd93ef2b03428915f64435"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae0ea53cacfdd93ef2b03428915f64435">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ae0ea53cacfdd93ef2b03428915f64435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a331c49831c410bfabae1ac1493c54950"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a331c49831c410bfabae1ac1493c54950">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a331c49831c410bfabae1ac1493c54950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38fe4b20a05bbaa1c844f3d7a19791ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a38fe4b20a05bbaa1c844f3d7a19791ae">TEST_SUITE_END</a> () <a class="el" href="_window_iterator_8cpp.xhtml#a73168adf798e300ad06a0341c1c9bd59">DATA_TEST_CASE</a>(Configuration = ActivationValidationQuantizedFixture&lt;CLTensor, CLAccessor, CLActivationLayer, T&gt;</td></tr>
<tr class="separator:a38fe4b20a05bbaa1c844f3d7a19791ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2610374027f2e967a291bd532942dd8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa2610374027f2e967a291bd532942dd8">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa2610374027f2e967a291bd532942dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e89b03e3417731c4ecc310d10bb2fe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad0e89b03e3417731c4ecc310d10bb2fe">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ad0e89b03e3417731c4ecc310d10bb2fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a924a9bfd889f0cdab9823be170094675"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a924a9bfd889f0cdab9823be170094675">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a924a9bfd889f0cdab9823be170094675"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16daaaa7b2946b928756e03a6cef5c48"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a16daaaa7b2946b928756e03a6cef5c48">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a16daaaa7b2946b928756e03a6cef5c48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a741d89a89433d9975363d4404a06c43b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a741d89a89433d9975363d4404a06c43b">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a741d89a89433d9975363d4404a06c43b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54da2463fdf2fc94e86de3930368186c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a54da2463fdf2fc94e86de3930368186c">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a54da2463fdf2fc94e86de3930368186c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0d51427397a892e716faaa8fdd993bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af0d51427397a892e716faaa8fdd993bb">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:af0d51427397a892e716faaa8fdd993bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa52f3b4bd8ff44e250c85c5c0cfbeaaa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa52f3b4bd8ff44e250c85c5c0cfbeaaa">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; half &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F16)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa52f3b4bd8ff44e250c85c5c0cfbeaaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad586fbe518e36bb13dcea2c4b353c80f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad586fbe518e36bb13dcea2c4b353c80f">combine</a> (combine(combine(combine(framework::dataset::concat(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), datasets::SmallDepthwiseConvolutionLayerDataset3x3NCHW()), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ad586fbe518e36bb13dcea2c4b353c80f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae611b10d1f54a9fd157e1ba8a8a68598"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae611b10d1f54a9fd157e1ba8a8a68598">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ae611b10d1f54a9fd157e1ba8a8a68598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b3a18113642e442b580ec601292466a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9b3a18113642e442b580ec601292466a">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a9b3a18113642e442b580ec601292466a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3b9d291eb281b447b26c6cb12c6cac0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab3b9d291eb281b447b26c6cb12c6cac0">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NCHW)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ab3b9d291eb281b447b26c6cb12c6cac0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dcd6383242254a7b48e1973606865bc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2dcd6383242254a7b48e1973606865bc">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a2dcd6383242254a7b48e1973606865bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03a4d874f70f61eb7c0af8eb5e963242"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a03a4d874f70f61eb7c0af8eb5e963242">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a03a4d874f70f61eb7c0af8eb5e963242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1daafbad9dff7a189d76892a980e042"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa1daafbad9dff7a189d76892a980e042">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa1daafbad9dff7a189d76892a980e042"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67b7573c8586948d53d29409fdcf6455"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a67b7573c8586948d53d29409fdcf6455">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, DataLayout::NHWC)), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a67b7573c8586948d53d29409fdcf6455"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78bf32187286a070d6347f31439d6515"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a78bf32187286a070d6347f31439d6515">combine</a> (combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a78bf32187286a070d6347f31439d6515"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac445edd558638226299832fbf8be20a7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac445edd558638226299832fbf8be20a7">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac445edd558638226299832fbf8be20a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86043fd462c338af745c7c7979e256d3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a86043fd462c338af745c7c7979e256d3">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a86043fd462c338af745c7c7979e256d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace808ca17377731ba0cddc6e782b86ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ace808ca17377731ba0cddc6e782b86ef">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerFixture&lt; float &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ace808ca17377731ba0cddc6e782b86ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d03343c7d93753ca7ef3fd3200b6f9a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3d03343c7d93753ca7ef3fd3200b6f9a">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a3d03343c7d93753ca7ef3fd3200b6f9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0d7eaebe2ba1219751e24188de753b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad0d7eaebe2ba1219751e24188de753b8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ad0d7eaebe2ba1219751e24188de753b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2956754917394cf7fad6e2b65edd8d2a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2956754917394cf7fad6e2b65edd8d2a">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a2956754917394cf7fad6e2b65edd8d2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa36f5d911598cb660173f0c3d176edd8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa36f5d911598cb660173f0c3d176edd8">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:aa36f5d911598cb660173f0c3d176edd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b31d23f13d8244bf6c9210a45ba4872"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2b31d23f13d8244bf6c9210a45ba4872">combine</a> (combine(combine(combine(combine(datasets::SmallDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a2b31d23f13d8244bf6c9210a45ba4872"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac24f74b0540c54c28847da9e3efd2c57"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac24f74b0540c54c28847da9e3efd2c57">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeDepthwiseConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:ac24f74b0540c54c28847da9e3efd2c57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a278b78f4dc798f0306846bf605fa0243"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a278b78f4dc798f0306846bf605fa0243">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::PRECOMMIT, combine(combine(combine(combine(combine(datasets::SmallDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a278b78f4dc798f0306846bf605fa0243"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bf5fa245f530536ba2ff66ce93c2e44"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1bf5fa245f530536ba2ff66ce93c2e44">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;, framework::DatasetMode::NIGHTLY, combine(combine(combine(combine(combine(datasets::LargeDepthwiseDilatedConvolutionLayerDataset3x3(), depth_multipliers), framework::dataset::make(&quot;DataType&quot;, DataType::QASYMM8)), framework::dataset::make(&quot;QuantizationInfo&quot;, { QuantizationInfo(0.5f, 10) })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), ActivationFunctionsDataset))</td></tr>
<tr class="separator:a1bf5fa245f530536ba2ff66ce93c2e44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a2437c44063526d22feb88404f431c5c8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2437c44063526d22feb88404f431c5c8">CLDepthwiseConvolutionLayerFixture&lt; half &gt;</a></td></tr>
<tr class="separator:a2437c44063526d22feb88404f431c5c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98594c5ca9886c14365d813714611c79"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a98594c5ca9886c14365d813714611c79">CLDepthwiseConvolutionLayerFixture&lt; float &gt;</a></td></tr>
<tr class="separator:a98594c5ca9886c14365d813714611c79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46215efb57d85d73b814e3a5b3f987c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a46215efb57d85d73b814e3a5b3f987c2">CLDepthwiseConvolutionLayerQuantizedFixture&lt; uint8_t &gt;</a></td></tr>
<tr class="separator:a46215efb57d85d73b814e3a5b3f987c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="validation_2_c_l_2_depthwise_convolution_layer_8cpp.xhtml">DepthwiseConvolutionLayer.cpp</a></li>
    <li class="footer">Generated on Thu May 23 2019 17:11:26 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
