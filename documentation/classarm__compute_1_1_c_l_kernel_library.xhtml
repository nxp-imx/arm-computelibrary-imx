<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: CLKernelLibrary Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarm__compute_1_1_c_l_kernel_library.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CLKernelLibrary Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" title="CLKernelLibrary class.">CLKernelLibrary</a> class.  
 <a href="classarm__compute_1_1_c_l_kernel_library.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a670869004281695200784de4648a4e1b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a670869004281695200784de4648a4e1b">CLKernelLibrary</a> (const <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp;)=delete</td></tr>
<tr class="memdesc:a670869004281695200784de4648a4e1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#a670869004281695200784de4648a4e1b">More...</a><br /></td></tr>
<tr class="separator:a670869004281695200784de4648a4e1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54fb81956f9fb1c25b279e34e1e7d966"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a54fb81956f9fb1c25b279e34e1e7d966">operator=</a> (const <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp;)=delete</td></tr>
<tr class="memdesc:a54fb81956f9fb1c25b279e34e1e7d966"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prevent instances of this class from being copied.  <a href="#a54fb81956f9fb1c25b279e34e1e7d966">More...</a><br /></td></tr>
<tr class="separator:a54fb81956f9fb1c25b279e34e1e7d966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f976367edcd9ab787375373e050b94b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a9f976367edcd9ab787375373e050b94b">init</a> (std::string kernel_path, cl::Context <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a252f5440564c77d68459f2baa978f86a">context</a>, cl::Device device)</td></tr>
<tr class="memdesc:a9f976367edcd9ab787375373e050b94b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialises the kernel library.  <a href="#a9f976367edcd9ab787375373e050b94b">More...</a><br /></td></tr>
<tr class="separator:a9f976367edcd9ab787375373e050b94b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a558a56f5d0dcd6305c405ebc38cc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a66a558a56f5d0dcd6305c405ebc38cc2">set_kernel_path</a> (const std::string &amp;kernel_path)</td></tr>
<tr class="memdesc:a66a558a56f5d0dcd6305c405ebc38cc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the path that the kernels reside in.  <a href="#a66a558a56f5d0dcd6305c405ebc38cc2">More...</a><br /></td></tr>
<tr class="separator:a66a558a56f5d0dcd6305c405ebc38cc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7395c158d8e31b9af211b9bc1f65a08"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#ad7395c158d8e31b9af211b9bc1f65a08">get_kernel_path</a> ()</td></tr>
<tr class="memdesc:ad7395c158d8e31b9af211b9bc1f65a08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the path that the kernels reside in.  <a href="#ad7395c158d8e31b9af211b9bc1f65a08">More...</a><br /></td></tr>
<tr class="separator:ad7395c158d8e31b9af211b9bc1f65a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44e90c4fa1204a708499ece56d4c82f0"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a44e90c4fa1204a708499ece56d4c82f0">get_program_source</a> (const std::string &amp;program_name)</td></tr>
<tr class="memdesc:a44e90c4fa1204a708499ece56d4c82f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the source of the selected program.  <a href="#a44e90c4fa1204a708499ece56d4c82f0">More...</a><br /></td></tr>
<tr class="separator:a44e90c4fa1204a708499ece56d4c82f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a293edc1bbcbddffb7228ac97917ed107"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a293edc1bbcbddffb7228ac97917ed107">set_context</a> (cl::Context <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a252f5440564c77d68459f2baa978f86a">context</a>)</td></tr>
<tr class="memdesc:a293edc1bbcbddffb7228ac97917ed107"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the CL context used to create programs.  <a href="#a293edc1bbcbddffb7228ac97917ed107">More...</a><br /></td></tr>
<tr class="separator:a293edc1bbcbddffb7228ac97917ed107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a252f5440564c77d68459f2baa978f86a"><td class="memItemLeft" align="right" valign="top">cl::Context &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a252f5440564c77d68459f2baa978f86a">context</a> ()</td></tr>
<tr class="memdesc:a252f5440564c77d68459f2baa978f86a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor for the associated CL context.  <a href="#a252f5440564c77d68459f2baa978f86a">More...</a><br /></td></tr>
<tr class="separator:a252f5440564c77d68459f2baa978f86a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06733f65cb098d0ba67b028b1cb94b03"><td class="memItemLeft" align="right" valign="top">cl::Device &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a06733f65cb098d0ba67b028b1cb94b03">get_device</a> ()</td></tr>
<tr class="memdesc:a06733f65cb098d0ba67b028b1cb94b03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the CL device for which the programs are created.  <a href="#a06733f65cb098d0ba67b028b1cb94b03">More...</a><br /></td></tr>
<tr class="separator:a06733f65cb098d0ba67b028b1cb94b03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a6865d04c8d3348860f3cb8100fdb97"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a5a6865d04c8d3348860f3cb8100fdb97">set_device</a> (cl::Device device)</td></tr>
<tr class="memdesc:a5a6865d04c8d3348860f3cb8100fdb97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the CL device for which the programs are created.  <a href="#a5a6865d04c8d3348860f3cb8100fdb97">More...</a><br /></td></tr>
<tr class="separator:a5a6865d04c8d3348860f3cb8100fdb97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef78b2e57b5203f8a184465e2da020ef"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#aef78b2e57b5203f8a184465e2da020ef">get_device_version</a> ()</td></tr>
<tr class="memdesc:aef78b2e57b5203f8a184465e2da020ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the device version.  <a href="#aef78b2e57b5203f8a184465e2da020ef">More...</a><br /></td></tr>
<tr class="separator:aef78b2e57b5203f8a184465e2da020ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c2942ccd8b3f3b82e3edb7950a9e414"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_kernel.xhtml">Kernel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a8c2942ccd8b3f3b82e3edb7950a9e414">create_kernel</a> (const std::string &amp;kernel_name, const StringSet &amp;build_options_set={}) const</td></tr>
<tr class="memdesc:a8c2942ccd8b3f3b82e3edb7950a9e414"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a kernel from the kernel library.  <a href="#a8c2942ccd8b3f3b82e3edb7950a9e414">More...</a><br /></td></tr>
<tr class="separator:a8c2942ccd8b3f3b82e3edb7950a9e414"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeda307cc2131afa8a4764e38373f94e"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#aaeda307cc2131afa8a4764e38373f94e">max_local_workgroup_size</a> (const cl::Kernel &amp;kernel) const</td></tr>
<tr class="memdesc:aaeda307cc2131afa8a4764e38373f94e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the maximum number of local work items in a workgroup can be supported for the kernel.  <a href="#aaeda307cc2131afa8a4764e38373f94e">More...</a><br /></td></tr>
<tr class="separator:aaeda307cc2131afa8a4764e38373f94e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="memItemLeft" align="right" valign="top">cl::NDRange&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8">default_ndrange</a> () const</td></tr>
<tr class="memdesc:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the default NDRange for the device.  <a href="#adb48a1da7dc6b6f3c1a424d21e1ac1f8">More...</a><br /></td></tr>
<tr class="separator:adb48a1da7dc6b6f3c1a424d21e1ac1f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ad613086cc79a2e32d5b87bcefc7488"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a0ad613086cc79a2e32d5b87bcefc7488">clear_programs_cache</a> ()</td></tr>
<tr class="memdesc:a0ad613086cc79a2e32d5b87bcefc7488"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the library's cache of binary programs.  <a href="#a0ad613086cc79a2e32d5b87bcefc7488">More...</a><br /></td></tr>
<tr class="separator:a0ad613086cc79a2e32d5b87bcefc7488"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ac02c2c58f604b7848a2fb1141c1e32"><td class="memItemLeft" align="right" valign="top">const std::map&lt; std::string, cl::Program &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a9ac02c2c58f604b7848a2fb1141c1e32">get_built_programs</a> () const</td></tr>
<tr class="memdesc:a9ac02c2c58f604b7848a2fb1141c1e32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the cache of built OpenCL programs.  <a href="#a9ac02c2c58f604b7848a2fb1141c1e32">More...</a><br /></td></tr>
<tr class="separator:a9ac02c2c58f604b7848a2fb1141c1e32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76d1513abb2d86ece6044a4fe2a83f56"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a76d1513abb2d86ece6044a4fe2a83f56">add_built_program</a> (const std::string &amp;built_program_name, cl::Program program)</td></tr>
<tr class="memdesc:a76d1513abb2d86ece6044a4fe2a83f56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a new built program to the cache.  <a href="#a76d1513abb2d86ece6044a4fe2a83f56">More...</a><br /></td></tr>
<tr class="separator:a76d1513abb2d86ece6044a4fe2a83f56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f51d241825bd6710fe81b581068ba1e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a4f51d241825bd6710fe81b581068ba1e">fp16_supported</a> () const</td></tr>
<tr class="memdesc:a4f51d241825bd6710fe81b581068ba1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if FP16 is supported by the CL device.  <a href="#a4f51d241825bd6710fe81b581068ba1e">More...</a><br /></td></tr>
<tr class="separator:a4f51d241825bd6710fe81b581068ba1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7406f704be6891f5a9a1c6dbc3e882df"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a7406f704be6891f5a9a1c6dbc3e882df">int64_base_atomics_supported</a> () const</td></tr>
<tr class="memdesc:a7406f704be6891f5a9a1c6dbc3e882df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if int64_base_atomics extension is supported by the CL device.  <a href="#a7406f704be6891f5a9a1c6dbc3e882df">More...</a><br /></td></tr>
<tr class="separator:a7406f704be6891f5a9a1c6dbc3e882df"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acba005f5ce2c62cbf3f94d074d9007aa"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml#acba005f5ce2c62cbf3f94d074d9007aa">get</a> ()</td></tr>
<tr class="memdesc:acba005f5ce2c62cbf3f94d074d9007aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the KernelLibrary singleton.  <a href="#acba005f5ce2c62cbf3f94d074d9007aa">More...</a><br /></td></tr>
<tr class="separator:acba005f5ce2c62cbf3f94d074d9007aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml" title="CLKernelLibrary class.">CLKernelLibrary</a> class. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00192">192</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a670869004281695200784de4648a4e1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a670869004281695200784de4648a4e1b">&#9670;&nbsp;</a></span>CLKernelLibrary()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a76d1513abb2d86ece6044a4fe2a83f56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76d1513abb2d86ece6044a4fe2a83f56">&#9670;&nbsp;</a></span>add_built_program()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void add_built_program </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>built_program_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl::Program&#160;</td>
          <td class="paramname"><em>program</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a new built program to the cache. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">built_program_name</td><td>Name of the program </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">program</td><td>Built program to add to the cache </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01038">1038</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;{</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    _built_programs_map.emplace(built_program_name, program);</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0ad613086cc79a2e32d5b87bcefc7488"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ad613086cc79a2e32d5b87bcefc7488">&#9670;&nbsp;</a></span>clear_programs_cache()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void clear_programs_cache </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear the library's cache of binary programs. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00319">319</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    {</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        _programs_map.clear();</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        _built_programs_map.clear();</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_framework_8cpp_source.xhtml#l00528">Framework::run()</a>.</p>

</div>
</div>
<a id="a252f5440564c77d68459f2baa978f86a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a252f5440564c77d68459f2baa978f86a">&#9670;&nbsp;</a></span>context()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cl::Context&amp; context </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Accessor for the associated CL context. </p>
<dl class="section return"><dt>Returns</dt><dd>A CL context. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00275">275</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    {</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">return</span> _context;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_scheduler_8h_source.xhtml#l00091">CLScheduler::context()</a>, <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00215">CLKernelLibrary::init()</a>, and <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00249">CLKernelLibrary::set_context()</a>.</p>

</div>
</div>
<a id="a8c2942ccd8b3f3b82e3edb7950a9e414"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c2942ccd8b3f3b82e3edb7950a9e414">&#9670;&nbsp;</a></span>create_kernel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_kernel.xhtml">Kernel</a> create_kernel </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const StringSet &amp;&#160;</td>
          <td class="paramname"><em>build_options_set</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a kernel from the kernel library. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_name</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">build_options_set</td><td><a class="el" href="classarm__compute_1_1_kernel.xhtml" title="Kernel class.">Kernel</a> build options as a set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created kernel. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l00964">964</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;{</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <span class="comment">// Find which program contains the kernel</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;    <span class="keyword">auto</span> kernel_program_it = _kernel_program_map.find(kernel_name);</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    <span class="keywordflow">if</span>(_kernel_program_map.end() == kernel_program_it)</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    {</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;        <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Kernel %s not found in the CLKernelLibrary&quot;</span>, kernel_name.c_str());</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    }</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;    std::string concat_str;</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;<span class="preprocessor">#if defined(ARM_COMPUTE_DEBUG_ENABLED)</span></div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;    <span class="comment">// Enable debug properties in CL kernels</span></div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    concat_str += <span class="stringliteral">&quot; -DARM_COMPUTE_DEBUG_ENABLED&quot;</span>;</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;<span class="preprocessor">#endif // defined(ARM_COMPUTE_DEBUG_ENABLED)</span></div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a4f51d241825bd6710fe81b581068ba1e">fp16_supported</a>())</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    {</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        concat_str += <span class="stringliteral">&quot; -DARM_COMPUTE_OPENCL_FP16_ENABLED=1 &quot;</span>;</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    }</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#ac07e02c0066cf540a5a2665fa7d54934">dot8_supported</a>(_device))</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;    {</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;        concat_str += <span class="stringliteral">&quot; -DARM_COMPUTE_OPENCL_DOT8_ENABLED=1 &quot;</span>;</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    }</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a4878daab91c6d7173de20283766e0c2c">dot8_acc_supported</a>(_device))</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    {</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;        concat_str += <span class="stringliteral">&quot; -DARM_COMPUTE_OPENCL_DOT8_ACC_ENABLED=1 &quot;</span>;</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    }</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a0e62ce01a7a7af6c3d059bb8534cad45">get_cl_version</a>(_device) == <a class="code" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52eaba90edbc644c32afa8a7e36e87735aab">CLVersion::CL20</a>)</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    {</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;        concat_str += <span class="stringliteral">&quot; -cl-std=CL2.0 &quot;</span>;</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    }</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="namespacearm__compute.xhtml#a0019d1de2500c73f16b673d8a883a767">arm_non_uniform_workgroup_supported</a>(_device))</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    {</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;        concat_str += <span class="stringliteral">&quot; -cl-arm-non-uniform-work-group-size &quot;</span>;</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;    }</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    {</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;        <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Non uniform workgroup size is not supported!!&quot;</span>);</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;    }</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;    <span class="comment">// Check if the program has been built before with same build options.</span></div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;    <span class="keyword">const</span> std::string program_name  = kernel_program_it-&gt;second;</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    <span class="keyword">const</span> std::string build_options = stringify_set(build_options_set) + concat_str;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    <span class="keyword">const</span> std::string built_program_name = program_name + <span class="stringliteral">&quot;_&quot;</span> + build_options;</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <span class="keyword">auto</span>              built_program_it   = _built_programs_map.find(built_program_name);</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;    cl::Program cl_program;</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;    <span class="keywordflow">if</span>(_built_programs_map.end() != built_program_it)</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    {</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;        <span class="comment">// If program has been built, retrieve to create kernel from it</span></div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        cl_program = built_program_it-&gt;second;</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;    }</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    {</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;        <span class="comment">// Get program</span></div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;        <a class="code" href="classarm__compute_1_1_program.xhtml">Program</a> program = load_program(program_name);</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;        <span class="comment">// Build program</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;        cl_program = program.<a class="code" href="classarm__compute_1_1_program.xhtml#a14c39544e9ac2c2fce1179bd99f093c4">build</a>(build_options);</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;        <span class="comment">// Add built program to internal map</span></div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;        _built_programs_map.emplace(built_program_name, cl_program);</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    }</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    <span class="comment">// Create and return kernel</span></div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarm__compute_1_1_kernel.xhtml">Kernel</a>(kernel_name, cl_program);</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a4878daab91c6d7173de20283766e0c2c"><div class="ttname"><a href="namespacearm__compute.xhtml#a4878daab91c6d7173de20283766e0c2c">arm_compute::dot8_acc_supported</a></div><div class="ttdeci">bool dot8_acc_supported(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to check whether the cl_arm_integer_dot_product_accumulate_int8 extension is supporte...</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00155">CLHelpers.cpp:155</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ac07e02c0066cf540a5a2665fa7d54934"><div class="ttname"><a href="namespacearm__compute.xhtml#ac07e02c0066cf540a5a2665fa7d54934">arm_compute::dot8_supported</a></div><div class="ttdeci">bool dot8_supported(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to check whether the cl_arm_integer_dot_product_int8 extension is supported.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00145">CLHelpers.cpp:145</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a3a440b3893fa10608d4428958be1c52eaba90edbc644c32afa8a7e36e87735aab"><div class="ttname"><a href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52eaba90edbc644c32afa8a7e36e87735aab">arm_compute::CLVersion::CL20</a></div></div>
<div class="ttc" id="classarm__compute_1_1_program_xhtml"><div class="ttname"><a href="classarm__compute_1_1_program.xhtml">arm_compute::Program</a></div><div class="ttdoc">Program class.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8h_source.xhtml#l00083">CLKernelLibrary.h:83</a></div></div>
<div class="ttc" id="classarm__compute_1_1_program_xhtml_a14c39544e9ac2c2fce1179bd99f093c4"><div class="ttname"><a href="classarm__compute_1_1_program.xhtml#a14c39544e9ac2c2fce1179bd99f093c4">arm_compute::Program::build</a></div><div class="ttdeci">static bool build(const cl::Program &amp;program, const std::string &amp;build_options=&quot;&quot;)</div><div class="ttdoc">Build the given CL program.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8cpp_source.xhtml#l00106">CLKernelLibrary.cpp:106</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a0e62ce01a7a7af6c3d059bb8534cad45"><div class="ttname"><a href="namespacearm__compute.xhtml#a0e62ce01a7a7af6c3d059bb8534cad45">arm_compute::get_cl_version</a></div><div class="ttdeci">CLVersion get_cl_version(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to get the highest OpenCL version supported.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00160">CLHelpers.cpp:160</a></div></div>
<div class="ttc" id="classarm__compute_1_1_kernel_xhtml"><div class="ttname"><a href="classarm__compute_1_1_kernel.xhtml">arm_compute::Kernel</a></div><div class="ttdoc">Kernel class.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8h_source.xhtml#l00150">CLKernelLibrary.h:150</a></div></div>
<div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a4f51d241825bd6710fe81b581068ba1e"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a4f51d241825bd6710fe81b581068ba1e">arm_compute::CLKernelLibrary::fp16_supported</a></div><div class="ttdeci">bool fp16_supported() const</div><div class="ttdoc">Returns true if FP16 is supported by the CL device.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8cpp_source.xhtml#l01043">CLKernelLibrary.cpp:1043</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a0019d1de2500c73f16b673d8a883a767"><div class="ttname"><a href="namespacearm__compute.xhtml#a0019d1de2500c73f16b673d8a883a767">arm_compute::arm_non_uniform_workgroup_supported</a></div><div class="ttdeci">bool arm_non_uniform_workgroup_supported(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to check whether the arm_non_uniform_work_group_size extension is supported.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00135">CLHelpers.cpp:135</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00135">arm_compute::arm_non_uniform_workgroup_supported()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l00106">Program::build()</a>, <a class="el" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52eaba90edbc644c32afa8a7e36e87735aab">arm_compute::CL20</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00155">arm_compute::dot8_acc_supported()</a>, <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00145">arm_compute::dot8_supported()</a>, <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01043">CLKernelLibrary::fp16_supported()</a>, and <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00160">arm_compute::get_cl_version()</a>.</p>

</div>
</div>
<a id="adb48a1da7dc6b6f3c1a424d21e1ac1f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb48a1da7dc6b6f3c1a424d21e1ac1f8">&#9670;&nbsp;</a></span>default_ndrange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cl::NDRange default_ndrange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the default NDRange for the device. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01139">1139</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;{</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">GPUTarget</a>   _target = <a class="code" href="namespacearm__compute.xhtml#a281384aa081efe5819eedd6a7c2a429b">get_target_from_device</a>(_device);</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    cl::NDRange default_range;</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;    <span class="keywordflow">switch</span>(_target)</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    {</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">GPUTarget::MIDGARD</a>:</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a6855a4342969d2b58c96d95385d6e673">GPUTarget::T600</a>:</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a664a94fa85b127eabc7bed25091843fd">GPUTarget::T700</a>:</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aae926a8537ded0221329aa9a89b84048">GPUTarget::T800</a>:</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;            default_range = cl::NDRange(128u, 1);</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;            default_range = cl::NullRange;</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;    }</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;    <span class="keywordflow">return</span> default_range;</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a664a94fa85b127eabc7bed25091843fd"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a664a94fa85b127eabc7bed25091843fd">arm_compute::GPUTarget::T700</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3aae926a8537ded0221329aa9a89b84048"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aae926a8537ded0221329aa9a89b84048">arm_compute::GPUTarget::T800</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3a6855a4342969d2b58c96d95385d6e673"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a6855a4342969d2b58c96d95385d6e673">arm_compute::GPUTarget::T600</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a281384aa081efe5819eedd6a7c2a429b"><div class="ttname"><a href="namespacearm__compute.xhtml#a281384aa081efe5819eedd6a7c2a429b">arm_compute::get_target_from_device</a></div><div class="ttdeci">GPUTarget get_target_from_device(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to get the GPU target from CL device.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00127">CLHelpers.cpp:127</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3">arm_compute::GPUTarget</a></div><div class="ttdeci">GPUTarget</div><div class="ttdoc">Available GPU Targets.</div><div class="ttdef"><b>Definition:</b> <a href="_g_p_u_target_8h_source.xhtml#l00034">GPUTarget.h:34</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38"><div class="ttname"><a href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::GPUTarget::MIDGARD</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00127">arm_compute::get_target_from_device()</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3afa362f4daec88442a387ff7cda411a38">arm_compute::MIDGARD</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a6855a4342969d2b58c96d95385d6e673">arm_compute::T600</a>, <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3a664a94fa85b127eabc7bed25091843fd">arm_compute::T700</a>, and <a class="el" href="namespacearm__compute.xhtml#a735ac6c2a02e320969625308810444f3aae926a8537ded0221329aa9a89b84048">arm_compute::T800</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00139">CLReductionOperationKernel::configure()</a>.</p>

</div>
</div>
<a id="a4f51d241825bd6710fe81b581068ba1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f51d241825bd6710fe81b581068ba1e">&#9670;&nbsp;</a></span>fp16_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool fp16_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if FP16 is supported by the CL device. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the CL device supports FP16 </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01043">1043</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;{</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a2ad3c9492d4158b574a89ab798d74e16">return ::fp16_supported</a>(_device);</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a2ad3c9492d4158b574a89ab798d74e16"><div class="ttname"><a href="namespacearm__compute.xhtml#a2ad3c9492d4158b574a89ab798d74e16">arm_compute::fp16_supported</a></div><div class="ttdeci">bool fp16_supported(const cl::Device &amp;device)</div><div class="ttdoc">Helper function to check whether the cl_khr_fp16 extension is supported.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00140">CLHelpers.cpp:140</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00140">arm_compute::fp16_supported()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l00964">CLKernelLibrary::create_kernel()</a>.</p>

</div>
</div>
<a id="acba005f5ce2c62cbf3f94d074d9007aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acba005f5ce2c62cbf3f94d074d9007aa">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp; get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access the KernelLibrary singleton. </p>
<dl class="section return"><dt>Returns</dt><dd>The KernelLibrary instance. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l00958">958</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;{</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> _kernel_library;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;    <span class="keywordflow">return</span> _kernel_library;</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;}</div><div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml">arm_compute::CLKernelLibrary</a></div><div class="ttdoc">CLKernelLibrary class.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8h_source.xhtml#l00192">CLKernelLibrary.h:192</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_c_l_integral_image_kernel_8cpp_source.xhtml#l00039">CLIntegralImageHorKernel::configure()</a>, <a class="el" href="_c_l_table_lookup_kernel_8cpp_source.xhtml#l00039">CLTableLookupKernel::configure()</a>, <a class="el" href="_c_l_warp_perspective_kernel_8cpp_source.xhtml#l00061">CLWarpPerspectiveKernel::configure()</a>, <a class="el" href="_c_l_box3x3_kernel_8cpp_source.xhtml#l00043">CLBox3x3Kernel::configure()</a>, <a class="el" href="_c_l_dilate_kernel_8cpp_source.xhtml#l00039">CLDilateKernel::configure()</a>, <a class="el" href="_c_l_element_wise_unary_layer_kernel_8cpp_source.xhtml#l00052">CLElementWiseUnaryLayerKernel::configure()</a>, <a class="el" href="_c_l_erode_kernel_8cpp_source.xhtml#l00039">CLErodeKernel::configure()</a>, <a class="el" href="_c_l_median3x3_kernel_8cpp_source.xhtml#l00039">CLMedian3x3Kernel::configure()</a>, <a class="el" href="_c_l_gaussian3x3_kernel_8cpp_source.xhtml#l00042">CLGaussian3x3Kernel::configure()</a>, <a class="el" href="_c_l_transpose_kernel_8cpp_source.xhtml#l00111">CLTransposeKernel::configure()</a>, <a class="el" href="_c_l_warp_affine_kernel_8cpp_source.xhtml#l00061">CLWarpAffineKernel::configure()</a>, <a class="el" href="_c_l_bitwise_not_kernel_8cpp_source.xhtml#l00034">CLBitwiseNotKernel::configure()</a>, <a class="el" href="_c_l_non_maxima_suppression3x3_kernel_8cpp_source.xhtml#l00044">CLNonMaximaSuppression3x3Kernel::configure()</a>, <a class="el" href="_c_l_scale_kernel_8cpp_source.xhtml#l00161">CLScaleKernel::configure()</a>, <a class="el" href="_c_l_accumulate_kernel_8cpp_source.xhtml#l00036">CLAccumulateKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_c_h_w_kernel_8cpp_source.xhtml#l00209">CLDepthwiseConvolutionLayer3x3NCHWKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_accumulate_biases_kernel_8cpp_source.xhtml#l00079">CLGEMMMatrixAccumulateBiasesKernel::configure()</a>, <a class="el" href="_c_l_threshold_kernel_8cpp_source.xhtml#l00037">CLThresholdKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer3x3_n_h_w_c_kernel_8cpp_source.xhtml#l00168">CLDepthwiseConvolutionLayer3x3NHWCKernel::configure()</a>, <a class="el" href="_c_l_non_linear_filter_kernel_8cpp_source.xhtml#l00056">CLNonLinearFilterKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_vector_multiply_kernel_8cpp_source.xhtml#l00083">CLGEMMMatrixVectorMultiplyKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_reshape_weights_kernel_8cpp_source.xhtml#l00087">CLDepthwiseConvolutionLayerReshapeWeightsKernel::configure()</a>, <a class="el" href="_c_l_min_max_layer_kernel_8cpp_source.xhtml#l00088">CLMinMaxLayerKernel::configure()</a>, <a class="el" href="_c_l_flatten_layer_kernel_8cpp_source.xhtml#l00086">CLFlattenLayerKernel::configure()</a>, <a class="el" href="_c_l_floor_kernel_8cpp_source.xhtml#l00079">CLFloorKernel::configure()</a>, <a class="el" href="_c_l_copy_kernel_8cpp_source.xhtml#l00138">CLCopyKernel::configure()</a>, <a class="el" href="_c_l_channel_shuffle_layer_kernel_8cpp_source.xhtml#l00095">CLChannelShuffleLayerKernel::configure()</a>, <a class="el" href="_c_l_reshape_layer_kernel_8cpp_source.xhtml#l00067">CLReshapeLayerKernel::configure()</a>, <a class="el" href="_c_l_reverse_kernel_8cpp_source.xhtml#l00068">CLReverseKernel::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00044">CLGaussianPyramidHorKernel::configure()</a>, <a class="el" href="_c_l_batch_to_space_layer_kernel_8cpp_source.xhtml#l00084">CLBatchToSpaceLayerKernel::configure()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00040">CLGradientKernel::configure()</a>, <a class="el" href="_c_l_generate_proposals_layer_kernel_8cpp_source.xhtml#l00068">CLComputeAllAnchorsKernel::configure()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00053">CLHistogramKernel::configure()</a>, <a class="el" href="_c_l_normalization_layer_kernel_8cpp_source.xhtml#l00107">CLNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_permute_kernel_8cpp_source.xhtml#l00081">CLPermuteKernel::configure()</a>, <a class="el" href="_c_l_tile_kernel_8cpp_source.xhtml#l00068">CLTileKernel::configure()</a>, <a class="el" href="_c_l_upsample_layer_kernel_8cpp_source.xhtml#l00066">CLUpsampleLayerKernel::configure()</a>, <a class="el" href="_c_l_depth_convert_layer_kernel_8cpp_source.xhtml#l00073">CLDepthConvertLayerKernel::configure()</a>, <a class="el" href="_c_l_locally_connected_matrix_multiply_kernel_8cpp_source.xhtml#l00084">CLLocallyConnectedMatrixMultiplyKernel::configure()</a>, <a class="el" href="_c_l_bitwise_and_kernel_8cpp_source.xhtml#l00040">CLBitwiseAndKernel::configure()</a>, <a class="el" href="_c_l_memset_kernel_8cpp_source.xhtml#l00042">CLMemsetKernel::configure()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00062">CLMinMaxKernel::configure()</a>, <a class="el" href="_c_l_bitwise_or_kernel_8cpp_source.xhtml#l00041">CLBitwiseOrKernel::configure()</a>, <a class="el" href="_c_l_gather_kernel_8cpp_source.xhtml#l00091">CLGatherKernel::configure()</a>, <a class="el" href="_c_l_remap_kernel_8cpp_source.xhtml#l00050">CLRemapKernel::configure()</a>, <a class="el" href="_c_l_reorg_layer_kernel_8cpp_source.xhtml#l00076">CLReorgLayerKernel::configure()</a>, <a class="el" href="_c_l_bitwise_xor_kernel_8cpp_source.xhtml#l00041">CLBitwiseXorKernel::configure()</a>, <a class="el" href="_c_l_space_to_batch_layer_kernel_8cpp_source.xhtml#l00089">CLSpaceToBatchLayerKernel::configure()</a>, <a class="el" href="_c_l_deconvolution_layer_upsample_kernel_8cpp_source.xhtml#l00073">CLDeconvolutionLayerUpsampleKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_reshape_weights_generic_kernel_8cpp_source.xhtml#l00070">CLDepthwiseConvolutionLayerReshapeWeightsGenericKernel::configure()</a>, <a class="el" href="_c_l_derivative_kernel_8cpp_source.xhtml#l00050">CLDerivativeKernel::configure()</a>, <a class="el" href="_c_l_activation_layer_kernel_8cpp_source.xhtml#l00103">CLActivationLayerKernel::configure()</a>, <a class="el" href="_c_l_comparison_kernel_8cpp_source.xhtml#l00113">CLComparisonKernel::configure()</a>, <a class="el" href="_c_l_sobel3x3_kernel_8cpp_source.xhtml#l00050">CLSobel3x3Kernel::configure()</a>, <a class="el" href="_c_l_width_concatenate2_tensors_kernel_8cpp_source.xhtml#l00097">CLWidthConcatenate2TensorsKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_addition_kernel_8cpp_source.xhtml#l00079">CLGEMMMatrixAdditionKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00048">CLHOGOrientationBinningKernel::configure()</a>, <a class="el" href="_c_l_normalize_planar_y_u_v_layer_kernel_8cpp_source.xhtml#l00098">CLNormalizePlanarYUVLayerKernel::configure()</a>, <a class="el" href="_c_l_fill_border_kernel_8cpp_source.xhtml#l00062">CLFillBorderKernel::configure()</a>, <a class="el" href="_c_l_pooling_layer_kernel_8cpp_source.xhtml#l00185">CLPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_quantization_layer_kernel_8cpp_source.xhtml#l00082">CLQuantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00172">CLGEMMLowpMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="_c_l_sobel5x5_kernel_8cpp_source.xhtml#l00050">CLSobel5x5HorKernel::configure()</a>, <a class="el" href="_c_l_sobel7x7_kernel_8cpp_source.xhtml#l00050">CLSobel7x7HorKernel::configure()</a>, <a class="el" href="_c_l_absolute_difference_kernel_8cpp_source.xhtml#l00047">CLAbsoluteDifferenceKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_reshaped_kernel_8cpp_source.xhtml#l00175">CLGEMMMatrixMultiplyReshapedKernel::configure()</a>, <a class="el" href="_c_l_depthwise_vector_to_tensor_kernel_8cpp_source.xhtml#l00064">CLDepthwiseVectorToTensorKernel::configure()</a>, <a class="el" href="_c_l_dequantization_layer_kernel_8cpp_source.xhtml#l00082">CLDequantizationLayerKernel::configure()</a>, <a class="el" href="_c_l_channel_extract_kernel_8cpp_source.xhtml#l00050">CLChannelExtractKernel::configure()</a>, <a class="el" href="_c_l_width_concatenate_layer_kernel_8cpp_source.xhtml#l00092">CLWidthConcatenateLayerKernel::configure()</a>, <a class="el" href="_c_l_pixel_wise_multiplication_kernel_8cpp_source.xhtml#l00120">CLPixelWiseMultiplicationKernel::configure()</a>, <a class="el" href="_c_l_prior_box_layer_kernel_8cpp_source.xhtml#l00103">CLPriorBoxLayerKernel::configure()</a>, <a class="el" href="_c_l_reduction_operation_kernel_8cpp_source.xhtml#l00139">CLReductionOperationKernel::configure()</a>, <a class="el" href="_c_l_bounding_box_transform_kernel_8cpp_source.xhtml#l00070">CLBoundingBoxTransformKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_r_h_s_matrix_kernel_8cpp_source.xhtml#l00103">CLGEMMReshapeRHSMatrixKernel::configure()</a>, <a class="el" href="_c_l_l2_normalize_layer_kernel_8cpp_source.xhtml#l00095">CLL2NormalizeLayerKernel::configure()</a>, <a class="el" href="_c_l_magnitude_phase_kernel_8cpp_source.xhtml#l00046">CLMagnitudePhaseKernel::configure()</a>, <a class="el" href="_c_l_mean_std_dev_kernel_8cpp_source.xhtml#l00066">CLMeanStdDevKernel::configure()</a>, <a class="el" href="_c_l_color_convert_kernel_8cpp_source.xhtml#l00048">CLColorConvertKernel::configure()</a>, <a class="el" href="_c_l_width_concatenate4_tensors_kernel_8cpp_source.xhtml#l00115">CLWidthConcatenate4TensorsKernel::configure()</a>, <a class="el" href="_c_l_range_kernel_8cpp_source.xhtml#l00093">CLRangeKernel::configure()</a>, <a class="el" href="_c_l_depthwise_im2_col_kernel_8cpp_source.xhtml#l00065">CLDepthwiseIm2ColKernel::configure()</a>, <a class="el" href="_c_l_channel_combine_kernel_8cpp_source.xhtml#l00049">CLChannelCombineKernel::configure()</a>, <a class="el" href="_c_l_select_kernel_8cpp_source.xhtml#l00109">CLSelectKernel::configure()</a>, <a class="el" href="_c_l_fuse_batch_normalization_kernel_8cpp_source.xhtml#l00098">CLFuseBatchNormalizationKernel::configure()</a>, <a class="el" href="_c_l_depth_concatenate_layer_kernel_8cpp_source.xhtml#l00101">CLDepthConcatenateLayerKernel::configure()</a>, <a class="el" href="_c_l_convert_fully_connected_weights_kernel_8cpp_source.xhtml#l00040">CLConvertFullyConnectedWeightsKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_reshape_l_h_s_matrix_kernel_8cpp_source.xhtml#l00121">CLGEMMReshapeLHSMatrixKernel::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00057">CLConvolutionKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_stack_layer_kernel_8cpp_source.xhtml#l00084">CLStackLayerKernel::configure()</a>, <a class="el" href="_c_l_y_o_l_o_layer_kernel_8cpp_source.xhtml#l00103">CLYOLOLayerKernel::configure()</a>, <a class="el" href="_c_l_winograd_input_transform_kernel_8cpp_source.xhtml#l00111">CLWinogradInputTransformKernel::configure()</a>, <a class="el" href="_c_l_integral_image_kernel_8cpp_source.xhtml#l00071">CLIntegralImageVertKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_matrix_multiply_kernel_8cpp_source.xhtml#l00234">CLGEMMLowpMatrixMultiplyKernel::configure()</a>, <a class="el" href="_c_l_r_o_i_align_layer_kernel_8cpp_source.xhtml#l00093">CLROIAlignLayerKernel::configure()</a>, <a class="el" href="_c_l_r_o_i_pooling_layer_kernel_8cpp_source.xhtml#l00073">CLROIPoolingLayerKernel::configure()</a>, <a class="el" href="_c_l_batch_normalization_layer_kernel_8cpp_source.xhtml#l00138">CLBatchNormalizationLayerKernel::configure()</a>, <a class="el" href="_c_l_direct_convolution_output_stage_kernel_8cpp_source.xhtml#l00129">CLDirectConvolutionLayerOutputStageKernel::configure()</a>, <a class="el" href="_c_l_winograd_filter_transform_kernel_8cpp_source.xhtml#l00102">CLWinogradFilterTransformKernel::configure()</a>, <a class="el" href="_c_l_strided_slice_kernel_8cpp_source.xhtml#l00106">CLStridedSliceKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_output_stage_kernel_8cpp_source.xhtml#l00161">CLGEMMLowpOffsetContributionOutputStageKernel::configure()</a>, <a class="el" href="_c_l_harris_corners_kernel_8cpp_source.xhtml#l00054">CLHarrisScoreKernel::configure()</a>, <a class="el" href="_c_l_winograd_output_transform_kernel_8cpp_source.xhtml#l00146">CLWinogradOutputTransformKernel::configure()</a>, <a class="el" href="_c_l_fast_corners_kernel_8cpp_source.xhtml#l00050">CLFastCornersKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_matrix_multiply_kernel_8cpp_source.xhtml#l00263">CLGEMMMatrixMultiplyKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_detector_kernel_8cpp_source.xhtml#l00044">CLHOGDetectorKernel::configure()</a>, <a class="el" href="_c_l_direct_convolution_layer_kernel_8cpp_source.xhtml#l00350">CLDirectConvolutionLayerKernel::configure()</a>, <a class="el" href="_c_l_accumulate_kernel_8cpp_source.xhtml#l00049">CLAccumulateWeightedKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_float_kernel_8cpp_source.xhtml#l00123">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFloatKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_by_fixed_point_kernel_8cpp_source.xhtml#l00124">CLGEMMLowpQuantizeDownInt32ToUint8ScaleByFixedPointKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_quantize_down_int32_to_uint8_scale_kernel_8cpp_source.xhtml#l00114">CLGEMMLowpQuantizeDownInt32ToUint8ScaleKernel::configure()</a>, <a class="el" href="_c_l_scharr3x3_kernel_8cpp_source.xhtml#l00050">CLScharr3x3Kernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_offset_contribution_kernel_8cpp_source.xhtml#l00145">CLGEMMLowpOffsetContributionKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_interleave4x4_kernel_8cpp_source.xhtml#l00119">CLGEMMInterleave4x4Kernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00106">CLGEMMLowpMatrixAReductionKernel::configure()</a>, <a class="el" href="_c_l_col2_im_kernel_8cpp_source.xhtml#l00090">CLCol2ImKernel::configure()</a>, <a class="el" href="_c_l_g_e_m_m_transpose1x_w_kernel_8cpp_source.xhtml#l00092">CLGEMMTranspose1xWKernel::configure()</a>, <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00047">CLDepthwiseConvolutionLayer3x3::configure()</a>, <a class="el" href="_c_l_im2_col_kernel_8cpp_source.xhtml#l00293">CLIm2ColKernel::configure()</a>, <a class="el" href="_c_l_weights_reshape_kernel_8cpp_source.xhtml#l00078">CLWeightsReshapeKernel::configure()</a>, <a class="el" href="_c_l_histogram_kernel_8cpp_source.xhtml#l00149">CLHistogramBorderKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00041">CLLKTrackerInitKernel::configure()</a>, <a class="el" href="_c_l_gaussian_pyramid_kernel_8cpp_source.xhtml#l00136">CLGaussianPyramidVertKernel::configure()</a>, <a class="el" href="_c_l_accumulate_kernel_8cpp_source.xhtml#l00067">CLAccumulateSquaredKernel::configure()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00111">CLEdgeNonMaxSuppressionKernel::configure()</a>, <a class="el" href="_c_l_min_max_location_kernel_8cpp_source.xhtml#l00169">CLMinMaxLocationKernel::configure()</a>, <a class="el" href="_c_l_h_o_g_descriptor_kernel_8cpp_source.xhtml#l00125">CLHOGBlockNormalizationKernel::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00127">CLSeparableConvolutionHorKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_g_e_m_m_lowp_reduction_kernel_8cpp_source.xhtml#l00164">CLGEMMLowpMatrixBReductionKernel::configure()</a>, <a class="el" href="_c_l_sobel5x5_kernel_8cpp_source.xhtml#l00144">CLSobel5x5VertKernel::configure()</a>, <a class="el" href="_c_l_sobel7x7_kernel_8cpp_source.xhtml#l00147">CLSobel7x7VertKernel::configure()</a>, <a class="el" href="_c_l_fast_corners_kernel_8cpp_source.xhtml#l00115">CLCopyToArrayKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00089">CLLKTrackerFinalizeKernel::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00180">CLSeparableConvolutionVertKernel&lt; matrix_size &gt;::configure()</a>, <a class="el" href="_c_l_canny_edge_kernel_8cpp_source.xhtml#l00173">CLEdgeTraceKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00123">CLLKTrackerStage0Kernel::configure()</a>, <a class="el" href="_c_l_convolution_kernel_8cpp_source.xhtml#l00246">CLConvolutionRectangleKernel::configure()</a>, <a class="el" href="_c_l_l_k_tracker_kernel_8cpp_source.xhtml#l00213">CLLKTrackerStage1Kernel::configure()</a>, <a class="el" href="_c_l_softmax_layer_kernel_8cpp_source.xhtml#l00335">CLLogits1DNormKernel::configure()</a>, <a class="el" href="_c_l_scheduler_8h_source.xhtml#l00091">CLScheduler::context()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00060">CLScheduler::default_init()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00048">CLScheduler::default_init_with_context()</a>, <a class="el" href="_c_l_validate_8h_source.xhtml#l00045">arm_compute::error_on_unsupported_int64_base_atomics()</a>, <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00125">ICLKernel::get_max_workgroup_size()</a>, <a class="el" href="main_8cpp_source.xhtml#l00090">main()</a>, <a class="el" href="_framework_8cpp_source.xhtml#l00528">Framework::run()</a>, <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00080">CLScheduler::set_context()</a>, <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00185">OpenCLMemoryUsage::test_measurements()</a>, and <a class="el" href="_c_l_depthwise_convolution_layer_8cpp_source.xhtml#l00128">CLDepthwiseConvolutionLayer3x3::validate()</a>.</p>

</div>
</div>
<a id="a9ac02c2c58f604b7848a2fb1141c1e32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ac02c2c58f604b7848a2fb1141c1e32">&#9670;&nbsp;</a></span>get_built_programs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt;std::string, cl::Program&gt;&amp; get_built_programs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access the cache of built OpenCL programs. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00326">326</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    {</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">return</span> _built_programs_map;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_open_c_l_memory_usage_8cpp_source.xhtml#l00185">OpenCLMemoryUsage::test_measurements()</a>.</p>

</div>
</div>
<a id="a06733f65cb098d0ba67b028b1cb94b03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06733f65cb098d0ba67b028b1cb94b03">&#9670;&nbsp;</a></span>get_device()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cl::Device&amp; get_device </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the CL device for which the programs are created. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00281">281</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">return</span> _device;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aef78b2e57b5203f8a184465e2da020ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef78b2e57b5203f8a184465e2da020ef">&#9670;&nbsp;</a></span>get_device_version()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_device_version </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the device version. </p>
<dl class="section return"><dt>Returns</dt><dd>The content of CL_DEVICE_VERSION </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01159">1159</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;{</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;    <span class="keywordflow">return</span> _device.getInfo&lt;CL_DEVICE_VERSION&gt;();</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad7395c158d8e31b9af211b9bc1f65a08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7395c158d8e31b9af211b9bc1f65a08">&#9670;&nbsp;</a></span>get_kernel_path()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_kernel_path </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the path that the kernels reside in. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00231">231</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    {</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">return</span> _kernel_path;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<a id="a44e90c4fa1204a708499ece56d4c82f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44e90c4fa1204a708499ece56d4c82f0">&#9670;&nbsp;</a></span>get_program_source()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string get_program_source </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>program_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the source of the selected program. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">program_name</td><td><a class="el" href="classarm__compute_1_1_program.xhtml" title="Program class.">Program</a> name.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Source of the selected program. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01116">1116</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;{</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> program_source_it = _program_source_map.find(program_name);</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    <span class="keywordflow">if</span>(program_source_it == _program_source_map.end())</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    {</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;        <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;Embedded program for %s does not exist.&quot;</span>, program_name.c_str());</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;    }</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    <span class="keywordflow">return</span> program_source_it-&gt;second;</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>.</p>

</div>
</div>
<a id="a9f976367edcd9ab787375373e050b94b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f976367edcd9ab787375373e050b94b">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void init </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>kernel_path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl::Context&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cl::Device&#160;</td>
          <td class="paramname"><em>device</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialises the kernel library. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_path</td><td>Path of the directory from which kernel sources are loaded. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>CL context used to create programs. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">device</td><td>CL device for which the programs are created. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00215">215</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        _kernel_path = std::move(kernel_path);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        _context     = std::move(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a252f5440564c77d68459f2baa978f86a">context</a>);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        _device      = std::move(device);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a252f5440564c77d68459f2baa978f86a"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a252f5440564c77d68459f2baa978f86a">arm_compute::CLKernelLibrary::context</a></div><div class="ttdeci">cl::Context &amp; context()</div><div class="ttdoc">Accessor for the associated CL context.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8h_source.xhtml#l00275">CLKernelLibrary.h:275</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00275">CLKernelLibrary::context()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00060">CLScheduler::default_init()</a>, and <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00048">CLScheduler::default_init_with_context()</a>.</p>

</div>
</div>
<a id="a7406f704be6891f5a9a1c6dbc3e882df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7406f704be6891f5a9a1c6dbc3e882df">&#9670;&nbsp;</a></span>int64_base_atomics_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool int64_base_atomics_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if int64_base_atomics extension is supported by the CL device. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the CL device supports int64_base_atomics extension </dd></dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01048">1048</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;{</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#a6c4a5ca34ebb51d4e2e119a110e4c8f0">device_supports_extension</a>(_device, <span class="stringliteral">&quot;cl_khr_int64_base_atomics&quot;</span>);</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;}</div><div class="ttc" id="namespacearm__compute_xhtml_a6c4a5ca34ebb51d4e2e119a110e4c8f0"><div class="ttname"><a href="namespacearm__compute.xhtml#a6c4a5ca34ebb51d4e2e119a110e4c8f0">arm_compute::device_supports_extension</a></div><div class="ttdeci">bool device_supports_extension(const cl::Device &amp;device, const char *extension_name)</div><div class="ttdoc">Helper function to check whether a given extension is supported.</div><div class="ttdef"><b>Definition:</b> <a href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00183">CLHelpers.cpp:183</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="core_2_c_l_2_c_l_helpers_8cpp_source.xhtml#l00183">arm_compute::device_supports_extension()</a>.</p>

</div>
</div>
<a id="aaeda307cc2131afa8a4764e38373f94e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaeda307cc2131afa8a4764e38373f94e">&#9670;&nbsp;</a></span>max_local_workgroup_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t max_local_workgroup_size </td>
          <td>(</td>
          <td class="paramtype">const cl::Kernel &amp;&#160;</td>
          <td class="paramname"><em>kernel</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Find the maximum number of local work items in a workgroup can be supported for the kernel. </p>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml#l01128">1128</a> of file <a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;{</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    <span class="keywordtype">size_t</span> result;</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    <span class="keywordtype">size_t</span> err = kernel.getWorkGroupInfo(_device, CL_KERNEL_WORK_GROUP_SIZE, &amp;result);</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;    <a class="code" href="_error_8h.xhtml#a5bbdcf574d3f5e412fa6a1117911e67b">ARM_COMPUTE_ERROR_ON_MSG</a>(err != 0, <span class="stringliteral">&quot;clGetKernelWorkGroupInfo failed to return the maximum workgroup size for the kernel&quot;</span>);</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    <a class="code" href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a>(err);</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    <span class="keywordflow">return</span> result;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a6dc630a6ae9cc063b3924bcea8dee9d6"><div class="ttname"><a href="_error_8h.xhtml#a6dc630a6ae9cc063b3924bcea8dee9d6">ARM_COMPUTE_UNUSED</a></div><div class="ttdeci">#define ARM_COMPUTE_UNUSED(...)</div><div class="ttdoc">To avoid unused variables warnings.</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00160">Error.h:160</a></div></div>
<div class="ttc" id="_error_8h_xhtml_a5bbdcf574d3f5e412fa6a1117911e67b"><div class="ttname"><a href="_error_8h.xhtml#a5bbdcf574d3f5e412fa6a1117911e67b">ARM_COMPUTE_ERROR_ON_MSG</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON_MSG(cond,...)</div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00328">Error.h:328</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_error_8h_source.xhtml#l00328">ARM_COMPUTE_ERROR_ON_MSG</a>, and <a class="el" href="_error_8h_source.xhtml#l00160">ARM_COMPUTE_UNUSED</a>.</p>

<p class="reference">Referenced by <a class="el" href="_i_c_l_kernel_8cpp_source.xhtml#l00125">ICLKernel::get_max_workgroup_size()</a>.</p>

</div>
</div>
<a id="a54fb81956f9fb1c25b279e34e1e7d966"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54fb81956f9fb1c25b279e34e1e7d966">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prevent instances of this class from being copied. </p>

</div>
</div>
<a id="a293edc1bbcbddffb7228ac97917ed107"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a293edc1bbcbddffb7228ac97917ed107">&#9670;&nbsp;</a></span>set_context()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_context </td>
          <td>(</td>
          <td class="paramtype">cl::Context&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the CL context used to create programs. </p>
<dl class="section note"><dt>Note</dt><dd>Setting the context also resets the device to the first one available in the new context.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>A CL context. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00249">249</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        _context = std::move(<a class="code" href="classarm__compute_1_1_c_l_kernel_library.xhtml#a252f5440564c77d68459f2baa978f86a">context</a>);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">if</span>(_context.get() == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            _device = cl::Device();</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        {</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keyword">const</span> <span class="keyword">auto</span> cl_devices = _context.getInfo&lt;CL_CONTEXT_DEVICES&gt;();</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            <span class="keywordflow">if</span>(cl_devices.empty())</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            {</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                _device = cl::Device();</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            }</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                _device = cl_devices[0];</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            }</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_c_l_kernel_library_xhtml_a252f5440564c77d68459f2baa978f86a"><div class="ttname"><a href="classarm__compute_1_1_c_l_kernel_library.xhtml#a252f5440564c77d68459f2baa978f86a">arm_compute::CLKernelLibrary::context</a></div><div class="ttdeci">cl::Context &amp; context()</div><div class="ttdoc">Accessor for the associated CL context.</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_kernel_library_8h_source.xhtml#l00275">CLKernelLibrary.h:275</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00275">CLKernelLibrary::context()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_c_l_scheduler_8cpp_source.xhtml#l00080">CLScheduler::set_context()</a>.</p>

</div>
</div>
<a id="a5a6865d04c8d3348860f3cb8100fdb97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a6865d04c8d3348860f3cb8100fdb97">&#9670;&nbsp;</a></span>set_device()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_device </td>
          <td>(</td>
          <td class="paramtype">cl::Device&#160;</td>
          <td class="paramname"><em>device</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the CL device for which the programs are created. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">device</td><td>A CL device. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00290">290</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    {</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        _device = std::move(device);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a66a558a56f5d0dcd6305c405ebc38cc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66a558a56f5d0dcd6305c405ebc38cc2">&#9670;&nbsp;</a></span>set_kernel_path()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_kernel_path </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>kernel_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the path that the kernels reside in. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_path</td><td>Path of the kernel. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_c_l_kernel_library_8h_source.xhtml#l00225">225</a> of file <a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    {</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        _kernel_path = kernel_path;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>arm_compute/core/CL/<a class="el" href="_c_l_kernel_library_8h_source.xhtml">CLKernelLibrary.h</a></li>
<li>src/core/CL/<a class="el" href="_c_l_kernel_library_8cpp_source.xhtml">CLKernelLibrary.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_c_l_kernel_library.xhtml">CLKernelLibrary</a></li>
    <li class="footer">Generated on Thu Feb 28 2019 12:24:59 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
