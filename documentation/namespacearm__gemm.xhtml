<!-- HTML header for doxygen 1.8.15-->
<!-- Remember to use version doxygen 1.8.15 +-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_gemm Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="Compute Library" src="https://raw.githubusercontent.com/ARM-software/ComputeLibrary/gh-pages/ACL_logo.png" style="max-width: 100%;margin-top: 15px;margin-left: 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">19.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespacearm__gemm.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_gemm Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__gemm_1_1utils"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm_1_1utils.xhtml">utils</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer.xhtml">Buffer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_buffer_manager.xhtml">BufferManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_hybrid.xhtml">GemmHybrid</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_interleaved.xhtml">GemmInterleaved</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemm_native.xhtml">GemmNative</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_batched.xhtml">GemvBatched</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_native_transposed.xhtml">GemvNativeTransposed</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_gemv_pretransposed.xhtml">GemvPretransposed</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_n_d_range.xhtml">NDRange</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_fixed.xhtml">StdTransformsFixed</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__gemm_1_1_std_transforms_s_v_e.xhtml">StdTransformsSVE</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a32006a302bde841f2cf4cc8bb131856b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856b">BufferStatus</a> { <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">IDLE</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">POPULATING</a>, 
<a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">BUSY</a>
 }</td></tr>
<tr class="separator:a32006a302bde841f2cf4cc8bb131856b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a60b1162856ab084a3588fc2d5fdec539"><td class="memTemplParams" colspan="2">template&lt;&gt; </td></tr>
<tr class="memitem:a60b1162856ab084a3588fc2d5fdec539"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; float, float &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a60b1162856ab084a3588fc2d5fdec539">gemm_implementation_list&lt; float, float &gt;</a> ()</td></tr>
<tr class="separator:a60b1162856ab084a3588fc2d5fdec539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad887120a5143bdeb8b661034f2a1089d"><td class="memItemLeft" align="right" valign="top">template UniqueGemmCommon&lt; float, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ad887120a5143bdeb8b661034f2a1089d">gemm&lt; float, float &gt;</a> (const GemmArgs&lt; float &gt; &amp;args)</td></tr>
<tr class="separator:ad887120a5143bdeb8b661034f2a1089d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b318608a1cec6f3e8e97af9d98781e8"><td class="memItemLeft" align="right" valign="top">template KernelDescription&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a2b318608a1cec6f3e8e97af9d98781e8">get_gemm_method&lt; float, float &gt;</a> (const GemmArgs&lt; float &gt; &amp;args)</td></tr>
<tr class="separator:a2b318608a1cec6f3e8e97af9d98781e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a791d95ca13db6a0d41f12fc3e3e2c180"><td class="memItemLeft" align="right" valign="top">template bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a791d95ca13db6a0d41f12fc3e3e2c180">method_is_compatible&lt; float, float &gt;</a> (GemmMethod method, const GemmArgs&lt; float &gt; &amp;args)</td></tr>
<tr class="separator:a791d95ca13db6a0d41f12fc3e3e2c180"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0132f55c6d1d908e4537c628c17e004"><td class="memItemLeft" align="right" valign="top">template std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#ae0132f55c6d1d908e4537c628c17e004">get_compatible_kernels&lt; float, float &gt;</a> (const GemmArgs&lt; float &gt; &amp;args)</td></tr>
<tr class="separator:ae0132f55c6d1d908e4537c628c17e004"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acddaad8ff32456a845746feeb2865bde"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret &gt; </td></tr>
<tr class="memitem:acddaad8ff32456a845746feeb2865bde"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; Top, Tret &gt; *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#acddaad8ff32456a845746feeb2865bde">gemm_implementation_list</a> ()</td></tr>
<tr class="separator:acddaad8ff32456a845746feeb2865bde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ec8bb2afab6de2518ca5649cdf9182a"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret &gt; </td></tr>
<tr class="memitem:a6ec8bb2afab6de2518ca5649cdf9182a"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a6ec8bb2afab6de2518ca5649cdf9182a">find_implementation</a> (const GemmArgs&lt; Tret &gt; &amp;args, const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; Top, Tret &gt; *&amp;impl)</td></tr>
<tr class="separator:a6ec8bb2afab6de2518ca5649cdf9182a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36da041082ba1c9310bdfdd3b6a2d24c"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret &gt; </td></tr>
<tr class="memitem:a36da041082ba1c9310bdfdd3b6a2d24c"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a36da041082ba1c9310bdfdd3b6a2d24c">get_compatible_kernels</a> (const GemmArgs&lt; Tret &gt; &amp;args)</td></tr>
<tr class="separator:a36da041082ba1c9310bdfdd3b6a2d24c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d35c3fce4e08e461199c4cdc6e5f613"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret &gt; </td></tr>
<tr class="memitem:a2d35c3fce4e08e461199c4cdc6e5f613"><td class="memTemplItemLeft" align="right" valign="top">UniqueGemmCommon&lt; Top, Tret &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a2d35c3fce4e08e461199c4cdc6e5f613">gemm</a> (const GemmArgs&lt; Tret &gt; &amp;args)</td></tr>
<tr class="separator:a2d35c3fce4e08e461199c4cdc6e5f613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19d838df735190843718a2cb4449204b"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret &gt; </td></tr>
<tr class="memitem:a19d838df735190843718a2cb4449204b"><td class="memTemplItemLeft" align="right" valign="top">KernelDescription&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a19d838df735190843718a2cb4449204b">get_gemm_method</a> (const GemmArgs&lt; Tret &gt; &amp;args)</td></tr>
<tr class="separator:a19d838df735190843718a2cb4449204b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d2763e21b221cb737e41bd90443c3de"><td class="memTemplParams" colspan="2">template&lt;typename Top , typename Tret &gt; </td></tr>
<tr class="memitem:a4d2763e21b221cb737e41bd90443c3de"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a4d2763e21b221cb737e41bd90443c3de">method_is_compatible</a> (GemmMethod method, const GemmArgs&lt; Tret &gt; &amp;args)</td></tr>
<tr class="separator:a4d2763e21b221cb737e41bd90443c3de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c160021f8ceaa70922f23cafd6b3c99"><td class="memTemplParams" colspan="2">template&lt;unsigned int twidth, unsigned int height, bool sve = false, typename Tin , typename Tout &gt; </td></tr>
<tr class="memitem:a4c160021f8ceaa70922f23cafd6b3c99"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearm__gemm.xhtml#a4c160021f8ceaa70922f23cafd6b3c99">MergeResults</a> (Tout *out, const Tin *in, int ldc, int y0, int ymax, int x0, int xmax, const Tout alpha, const Tout beta)</td></tr>
<tr class="separator:a4c160021f8ceaa70922f23cafd6b3c99"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a32006a302bde841f2cf4cc8bb131856b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32006a302bde841f2cf4cc8bb131856b">&#9670;&nbsp;</a></span>BufferStatus</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856b">BufferStatus</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7"></a>IDLE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398"></a>POPULATING&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4"></a>BUSY&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="buffer__manager_8hpp_source.xhtml#l00044">44</a> of file <a class="el" href="buffer__manager_8hpp_source.xhtml">buffer_manager.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                        {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">IDLE</a>,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">POPULATING</a>,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">BUSY</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;};</div><div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba63560453bdae7737f5a7f0b9fc23e398">arm_gemm::BufferStatus::POPULATING</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856ba802706a9238e2928077f97736854bad4">arm_gemm::BufferStatus::BUSY</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml_a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7"><div class="ttname"><a href="namespacearm__gemm.xhtml#a32006a302bde841f2cf4cc8bb131856baa5daf7f2ebbba4975d61dab1c40188c7">arm_gemm::BufferStatus::IDLE</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a6ec8bb2afab6de2518ca5649cdf9182a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ec8bb2afab6de2518ca5649cdf9182a">&#9670;&nbsp;</a></span>find_implementation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_gemm::find_implementation </td>
          <td>(</td>
          <td class="paramtype">const GemmArgs&lt; Tret &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt; Top, Tret &gt; *&amp;&#160;</td>
          <td class="paramname"><em>impl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00063">63</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                                                                                  {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">auto</span> gemms = gemm_implementation_list&lt;Top, Tret&gt;();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">const</span> GemmConfig *cfg = args._cfg;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret&gt; *saved_impl = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = gemms; i-&gt;method != GemmMethod::DEFAULT; i++) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="comment">/* Skip if this implementation doesn&#39;t support these args. */</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">if</span> (i-&gt;is_supported != <span class="keyword">nullptr</span> &amp;&amp; !i-&gt;is_supported(args)) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment">/* Skip if a specific method is requested and this is a different one. */</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">if</span> (cfg &amp;&amp; cfg-&gt;method != GemmMethod::DEFAULT &amp;&amp; i-&gt;method != cfg-&gt;method) {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">/* Skip if a filter is to be applied and it doesn&#39;t match. */</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">if</span> (cfg &amp;&amp; cfg-&gt;filter != <span class="stringliteral">&quot;&quot;</span> &amp;&amp; !strstr(i-&gt;name, cfg-&gt;filter.c_str())) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="comment">/* At this point, if we don&#39;t have a saved implementation, save this</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">         * one.  This is so that we always return something if a filter</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">         * matches, even if it doesn&#39;t recommend itself.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">         */</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">if</span> (saved_impl == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            saved_impl=i;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="comment">/* Check that this method recommends itself. */</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">if</span> (i-&gt;is_recommended != <span class="keyword">nullptr</span> &amp;&amp; !i-&gt;is_recommended(args)) {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        impl=i;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">/* We didn&#39;t find an option matching the filters that recommended</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * itself.  But if we found something earlier that matched the filters</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * but wasn&#39;t recommended, return it here.  */</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">if</span> (saved_impl != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        impl = saved_impl;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2d35c3fce4e08e461199c4cdc6e5f613"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d35c3fce4e08e461199c4cdc6e5f613">&#9670;&nbsp;</a></span>gemm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">UniqueGemmCommon&lt;Top, Tret&gt; arm_gemm::gemm </td>
          <td>(</td>
          <td class="paramtype">const GemmArgs&lt; Tret &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00133">133</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                                             {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret&gt; *impl;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">if</span> (find_implementation&lt;Top, Tret&gt;(args, impl)) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> UniqueGemmCommon&lt;Top, Tret&gt;(impl-&gt;instantiate(args));</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> UniqueGemmCommon&lt;Top, Tret&gt;(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00037">GemmImplementation&lt; Top, Tret &gt;::instantiate</a>.</p>

</div>
</div>
<a id="ad887120a5143bdeb8b661034f2a1089d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad887120a5143bdeb8b661034f2a1089d">&#9670;&nbsp;</a></span>gemm&lt; float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template UniqueGemmCommon&lt;float, float&gt; <a class="el" href="namespacearm__gemm.xhtml#a2d35c3fce4e08e461199c4cdc6e5f613">arm_gemm::gemm</a>&lt; float, float &gt; </td>
          <td>(</td>
          <td class="paramtype">const GemmArgs&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acddaad8ff32456a845746feeb2865bde"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acddaad8ff32456a845746feeb2865bde">&#9670;&nbsp;</a></span>gemm_implementation_list()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt;Top, Tret&gt;* arm_gemm::gemm_implementation_list </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a60b1162856ab084a3588fc2d5fdec539"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60b1162856ab084a3588fc2d5fdec539">&#9670;&nbsp;</a></span>gemm_implementation_list&lt; float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarm__gemm_1_1_gemm_implementation.xhtml">GemmImplementation</a>&lt;float, float&gt;* <a class="el" href="namespacearm__gemm.xhtml#acddaad8ff32456a845746feeb2865bde">arm_gemm::gemm_implementation_list</a>&lt; float, float &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__fp32_8cpp_source.xhtml#l00160">160</a> of file <a class="el" href="gemm__fp32_8cpp_source.xhtml">gemm_fp32.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                                                                 {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">return</span> gemm_fp32_methods;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a36da041082ba1c9310bdfdd3b6a2d24c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36da041082ba1c9310bdfdd3b6a2d24c">&#9670;&nbsp;</a></span>get_compatible_kernels()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; arm_gemm::get_compatible_kernels </td>
          <td>(</td>
          <td class="paramtype">const GemmArgs&lt; Tret &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00115">115</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                                                        {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    std::vector&lt;std::string&gt; res;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">auto</span> gemms = gemm_implementation_list&lt;Top, Tret&gt;();</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = gemms; i-&gt;method != GemmMethod::DEFAULT; i++) {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="comment">/* Check that this implementation supports the presented problem. */</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">if</span> (i-&gt;is_supported != <span class="keyword">nullptr</span> &amp;&amp; !i-&gt;is_supported(args)) {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        res.push_back(i-&gt;name);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae0132f55c6d1d908e4537c628c17e004"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0132f55c6d1d908e4537c628c17e004">&#9670;&nbsp;</a></span>get_compatible_kernels&lt; float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template std::vector&lt;std::string&gt; <a class="el" href="namespacearm__gemm.xhtml#a36da041082ba1c9310bdfdd3b6a2d24c">arm_gemm::get_compatible_kernels</a>&lt; float, float &gt; </td>
          <td>(</td>
          <td class="paramtype">const GemmArgs&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a19d838df735190843718a2cb4449204b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19d838df735190843718a2cb4449204b">&#9670;&nbsp;</a></span>get_gemm_method()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">KernelDescription arm_gemm::get_gemm_method </td>
          <td>(</td>
          <td class="paramtype">const GemmArgs&lt; Tret &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00144">144</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                                              {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret&gt; *impl;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span> (find_implementation&lt;Top, Tret&gt;(args, impl)) {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">return</span> KernelDescription(impl-&gt;method, impl-&gt;name);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="comment">/* This shouldn&#39;t happen - there should always be at least one valid implementation. */</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">return</span> KernelDescription();</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00033">GemmImplementation&lt; Top, Tret &gt;::method</a>, and <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00034">GemmImplementation&lt; Top, Tret &gt;::name</a>.</p>

</div>
</div>
<a id="a2b318608a1cec6f3e8e97af9d98781e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b318608a1cec6f3e8e97af9d98781e8">&#9670;&nbsp;</a></span>get_gemm_method&lt; float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template KernelDescription <a class="el" href="namespacearm__gemm.xhtml#a19d838df735190843718a2cb4449204b">arm_gemm::get_gemm_method</a>&lt; float, float &gt; </td>
          <td>(</td>
          <td class="paramtype">const GemmArgs&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4c160021f8ceaa70922f23cafd6b3c99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c160021f8ceaa70922f23cafd6b3c99">&#9670;&nbsp;</a></span>MergeResults()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_gemm::MergeResults </td>
          <td>(</td>
          <td class="paramtype">Tout *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Tin *&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ldc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Tout&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Tout&#160;</td>
          <td class="paramname"><em>beta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mergeresults_8hpp_source.xhtml#l00036">36</a> of file <a class="el" href="mergeresults_8hpp_source.xhtml">mergeresults.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                                                                                                                     {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// For SVE cases, multiply the width up by the vector length.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// Use the *input* type to determine this, since this will be what the kernel operated on.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> width = twidth * (sve ? get_vector_length&lt;Tin&gt;() : 1);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> full_y_blocks = (ymax - y0) / height;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> y_remainder = (ymax - y0) % height;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> y_blocks = full_y_blocks + (y_remainder ? 1 : 0);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> full_x_blocks = (xmax - x0) / width;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> x_remainder = (xmax - x0) % width;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> x_blocks = full_x_blocks + (x_remainder ? 1 : 0);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> y_block = 0; y_block &lt; y_blocks; y_block++) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordtype">int</span> ybase = y0 + (y_block * height);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordtype">int</span> fill_rows = (y_block &lt; full_y_blocks) ? height : y_remainder;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x_block = 0; x_block &lt; x_blocks; x_block++) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordtype">int</span> xbase = x0 + (x_block * width);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordtype">int</span> fill_cols = (x_block &lt; full_x_blocks) ? width : x_remainder;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> row=0; row &lt; fill_rows; row++) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> col=0; col &lt; fill_cols; col++) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                    Tout &amp;p = out[(ybase + row) * ldc + xbase + col];</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    <span class="comment">// Special case for beta==0 - don&#39;t read the input;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    <span class="comment">// (0 * x == 0) is not always true for FP types.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    <span class="keywordflow">if</span> (beta == static_cast&lt;Tout&gt;(0)) {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                        p = (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">alpha</a> * in[row * width + col]);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                        p = (p * beta) + (<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">alpha</a> * in[row * width + col]);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            in += (width * height);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a3161c2c93c655dd30953372064ec627b"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a3161c2c93c655dd30953372064ec627b">arm_compute::test::validation::alpha</a></div><div class="ttdeci">const float alpha</div><div class="ttdef"><b>Definition:</b> <a href="_n_e_o_n_2_accumulate_8cpp_source.xhtml#l00103">Accumulate.cpp:103</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_n_e_o_n_2_accumulate_8cpp_source.xhtml#l00103">arm_compute::test::validation::alpha</a>.</p>

<p class="reference">Referenced by <a class="el" href="std__transforms__sve_8hpp_source.xhtml#l00066">StdTransformsSVE&lt; TOperand, TResult, height, width_vectors, block, mmla &gt;::Merge()</a>.</p>

</div>
</div>
<a id="a4d2763e21b221cb737e41bd90443c3de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d2763e21b221cb737e41bd90443c3de">&#9670;&nbsp;</a></span>method_is_compatible()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_gemm::method_is_compatible </td>
          <td>(</td>
          <td class="paramtype">GemmMethod&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GemmArgs&lt; Tret &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gemm__implementation_8hpp_source.xhtml#l00156">156</a> of file <a class="el" href="gemm__implementation_8hpp_source.xhtml">gemm_implementation.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                                                         {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">/* Determine if the method is valid by attempting to obtain an implementation specifying this method. */</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    GemmConfig       cfg(method);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    GemmArgs&lt;Tret&gt;   myargs = args;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    myargs._cfg = &amp;cfg;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">const</span> GemmImplementation&lt;Top, Tret&gt; *impl;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> find_implementation&lt;Top, Tret&gt;(myargs, impl);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a791d95ca13db6a0d41f12fc3e3e2c180"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a791d95ca13db6a0d41f12fc3e3e2c180">&#9670;&nbsp;</a></span>method_is_compatible&lt; float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template bool <a class="el" href="namespacearm__gemm.xhtml#a4d2763e21b221cb737e41bd90443c3de">arm_gemm::method_is_compatible</a>&lt; float, float &gt; </td>
          <td>(</td>
          <td class="paramtype">GemmMethod&#160;</td>
          <td class="paramname"><em>method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const GemmArgs&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__gemm.xhtml">arm_gemm</a></li>
    <li class="footer">Generated on Thu Feb 28 2019 12:25:07 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
